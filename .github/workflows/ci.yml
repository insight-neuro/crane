name: CI

on:
  push:
    branches: [main]
    paths:
      - "crane/**"
      - "tests/**"
      - ".github/workflows/ci.yml"
      - "pyproject.toml"
  pull_request:
    paths:
      - "crane/**"
      - "tests/**"
      - ".github/workflows/ci.yml"
      - "pyproject.toml"

permissions:
  contents: read

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"
          cache-dependency-path: pyproject.toml
      - name: Install deps
        run: |
          python -m pip install -U pip
          python -m pip install -e .[dev]
      - name: Run tests
        run: |
          pytest -q --maxfail=1 --disable-warnings \
            --cov=crane --cov-report=term-missing --color=yes

  lint:
    name: lint (advisory)
    runs-on: ubuntu-latest
    needs: test
    if: always()
    continue-on-error: true
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"
          cache-dependency-path: pyproject.toml
      - run: python -m pip install -U pip ruff
      - name: Ruff lint
        run: ruff check . --output-format=github
      - name: Ruff format (check only)
        run: ruff format --check .

  typecheck:
    name: mypy (advisory)
    runs-on: ubuntu-latest
    needs: test
    if: always()
    continue-on-error: true
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        id: py
        with:
          python-version: "3.11"
          cache: "pip"
          cache-dependency-path: pyproject.toml

      - name: Cache mypy results
        uses: actions/cache@v4
        with:
          path: .mypy_cache
          key: mypy-${{ runner.os }}-${{ steps.py.outputs.python-version }}-${{ hashFiles('pyproject.toml') }}

      - name: Install mypy and project
        run: |
          python -m pip install -U pip mypy
          # Install your package so imports resolve during type checking
          python -m pip install -e .

      - name: mypy version
        run: mypy --version

      - name: Type check
        env:
          MYPY_CACHE_DIR: .mypy_cache
        run: |
          mypy src tests --install-types --non-interactive \
            --show-error-codes --pretty